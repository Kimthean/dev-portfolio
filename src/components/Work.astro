---
interface Project {
  name: string;
  description: string;
  link: {
    url?: string;
    target?: string;
    title?: string;
    buttonLabel?: string;
  };
  tags?: string[];
}

const projects: Project[] = [
  {
    name: "ESP-E-Reader",
    description:
      "A comprehensive e-reader firmware for ESP32-based hardware with temperature/humidity monitoring, RTC functionality, and future support for novel and manga reading. Features AHT30 sensor integration, RX8025T real-time clock, SD card storage.",
    link: {
      url: "https://github.com/Kimthean/ESP-E-Reader",
      title: "ESP-E-Reader GitHub Repo",
      buttonLabel: "GitHub Repo",
    },
    tags: ["C++", "ESP32", "IoT", "Hardware", "E-Reader", "Embedded Systems"],
  },
  {
    name: "WebTalesMTL",
    description:
      "A complete full-stack web application for crawling and translating Chinese web novels to English. Built with Go backend for concurrent crawling and chapter translation processing, and Astro JS frontend with server-side rendering for optimal performance. Features user history, bookmark tracking, and real-time translation capabilities.",
    link: {
      url: "https://github.com/Kimthean/webtales-frontend",
      title: "WebTales Frontend GitHub Repo",
      buttonLabel: "Frontend Repo",
    },
    tags: [
      "Go",
      "Astro",
      "TypeScript",
      "Full Stack",
      "Web Crawler",
      "Translation",
    ],
  },
  {
    name: "Crawly",
    description:
      "A web crawler built with TypeScript for crawling Khmer news text for ai dataset.",
    link: {
      url: "https://github.com/Kimthean/crawly",
      title: "crawly GitHub Repo",
      buttonLabel: "GitHub Repo",
    },
    tags: ["TypeScript", "Web Crawler"],
  },
  {
    name: "Outerbase Studio",
    description:
      "Contributed to LibSQL Studio by Outerbase, an open-source database management interface, implementing UI improvements and bug fixes.",
    link: {
      url: "https://github.com/outerbase/studio",
      title: "Outerbase Studio GitHub Repo",
      buttonLabel: "GitHub Repo",
    },
    tags: ["TypeScript", "Open Source"],
  },
  {
    name: "Kafe1",
    description:
      "A creator monetization platform built with Next.js and Supabase, integrating Cambodia's Bakong payment system for secure financial support of local content creators.",
    link: {
      url: "",
      title: "Kafe1 GitHub Repo",
      buttonLabel: "GitHub Repo",
    },
    tags: ["TypeScript", "Web App"],
  },
];
---

<section class="mt-8">
  <h2 class="text-3xl font-bold text-white mb-6">Education</h2>
  <div>
    <h3 class="text-xl font-semibold text-primary">
      Bachelors of Science in Information Technology
      <span class="text-gray-400 text-base font-normal">
        | University of Cambodia, Phnom Penh, Cambodia | 50% Scholarship
      </span>
    </h3>
    <p class="text-gray-300 mt-2">IELTS 7.0 (June 2022)</p>
  </div>
</section>

<section class="mt-8">
  <h2 class="text-3xl font-bold text-white mb-6">Professional Experience</h2>
  <div class="space-y-8">
    <div>
      <h3 class="text-xl font-semibold text-primary">
        Freelance Full Stack Developer <span
          class="text-gray-400 text-base font-normal"
          >| Remote | May 2025 - Present</span
        >
      </h3>
      <ul class="list-disc list-inside text-gray-300 mt-2 space-y-1">
        <li>
          Designing and building a modular CMS/AMS/DMS system for a government
          agency using a microservice architecture
        </li>
        <li>
          Developed multiple backend microservices using NestJS with centralized
          auth, logging, and RBAC
        </li>
        <li>
          Built a performant frontend with TanStack Router and React, enabling
          document workflows and dynamic views
        </li>
        <li>
          Integrated secure document handling, versioning, role-based
          permissions, and approval flows
        </li>
        <li>
          Orchestrated service communication with message queues and REST APIs
          for scalable deployment
        </li>
      </ul>
    </div>
    <div>
      <h3 class="text-xl font-semibold text-primary">
        Full Stack Developer <span class="text-gray-400 text-base font-normal"
          >| Dreamslab, Cambodia | Mar 2025 - Jul 2025</span
        >
      </h3>
      <ul class="list-disc list-inside text-gray-300 mt-2 space-y-1">
        <li>
          Developed DreamsPay, a secure Bakong payment gateway with KHQR code
          generation, enabling real-time transactions for Khamsa Group
          subsidiaries
        </li>
        <li>
          Engineered Ajium, a blockchain-based loyalty platform on Telegram mini
          app, leveraging Next.js and Hono for seamless token rewards
        </li>
        <li>
          Integrated React Router, NestJS, and SSE to optimize user flows and
          real-time data delivery, enhancing platform responsiveness
        </li>
        <li>
          Implemented Swagger for robust API documentation, streamlining backend
          integration
        </li>
        <li>
          Utilized Tailwind and TON to deliver scalable, maintainable UI
          components, improving development velocity
        </li>
      </ul>
    </div>
    <div>
      <h3 class="text-xl font-semibold text-primary">
        Junior Fullstack Developer <span
          class="text-gray-400 text-base font-normal"
          >| Dreamslab, Cambodia | Aug 2023 - Mar 2025</span
        >
      </h3>
      <ul class="list-disc list-inside text-gray-300 mt-2 space-y-1">
        <li>
          Engineered a modular LangChain RAG-based chatbot for customer support
          with GPT and embedding search using NestJS backend and Next.js
          frontend
        </li>
        <li>
          Developed a reusable chatbot agent library supporting multiple JS
          frameworks with WebSocket integration and SolidJS-based modular chat
          bubble components, improving portability
        </li>
        <li>
          Built an interactive online education platform with responsive UX
          using Next.js
        </li>
      </ul>
    </div>
    <h2 class="text-3xl font-bold text-white mb-6">Relevant Experience</h2>
    <div>
      <h3 class="text-xl font-semibold text-primary">
        Founder & Developer <span class="text-gray-400 text-base font-normal"
          >| WebTalesMTL, Cambodia | Jul 2024 - Sep 2024</span
        >
      </h3>
      <ul class="list-disc list-inside text-gray-300 mt-2 space-y-1">
        <li>
          Built a web crawler and translation engine in Go that scrapes and
          auto-translates Chinese web novels to English
        </li>
        <li>
          Developed responsive UI in AstroJS with server-side rendering for
          smooth UX
        </li>
        <li>
          Added features like bookmark tracking, chapter history, and user
          preferences
        </li>
      </ul>
    </div>
    <div>
      <h3 class="text-xl font-semibold text-primary">
        Open Source Contributor <span
          class="text-gray-400 text-base font-normal"
          >| LibSQL Studio (Outerbase OSS) | Apr 2024 - May 2024</span
        >
      </h3>
      <ul class="list-disc list-inside text-gray-300 mt-2 space-y-1">
        <li>
          Improved UI elements and resolved bugs in the LibSQL database
          management interface
        </li>
        <li>
          Focused on polish, accessibility, and developer productivity features
        </li>
      </ul>
    </div>
  </div>
</section>

<div class="pt-8">
  <h2 class="text-3xl font-bold text-white mb-6">Featured Projects</h2>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    {
      projects.map((project) => (
        <div class="flex flex-col border border-gray-700 rounded-xl p-6 bg-gradient-to-br from-gray-900 to-black shadow-lg hover:shadow-primary/30 transition-shadow">
          <h3 class="text-xl font-semibold text-primary mb-2">
            {project.name}
          </h3>
          <p class="text-gray-300 mb-3">{project.description}</p>
          {project.tags && (
            <div class="mb-3 flex flex-wrap gap-2">
              {project.tags.map((tag) => (
                <span class="bg-gray-800 text-xs text-gray-400 px-2 py-1 rounded">
                  {tag}
                </span>
              ))}
            </div>
          )}
          {project.link?.url && (
            <a
              href={project.link.url}
              title={project.link.title || project.name}
              target={project.link.target || "_blank"}
              class="inline-block px-4 py-2 mt-auto text-sm font-medium text-white bg-primary rounded hover:bg-primary/80 transition"
            >
              {project.link.buttonLabel || "Open Project Website"}
            </a>
          )}
        </div>
      ))
    }
  </div>
</div>
